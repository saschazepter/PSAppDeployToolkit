<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:iNKORE.UI.WPF.Modern.Controls"
    xmlns:primitives="clr-namespace:iNKORE.UI.WPF.Modern.Controls.Primitives"
    xmlns:converters="clr-namespace:iNKORE.UI.WPF.Modern.Common.Converters"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:m="clr-namespace:iNKORE.UI.WPF.Modern.Markup"
    xmlns:chelper="clr-namespace:iNKORE.UI.WPF.Modern.Controls.Helpers"
    xmlns:common="clr-namespace:iNKORE.UI.WPF.Modern.Common"
    xmlns:root="clr-namespace:iNKORE.UI.WPF.Modern">

    <Style x:Key="TitleBarBackButtonStyle" TargetType="primitives:TitleBarButton">
        <Setter Property="Background" Value="{DynamicResource AccentButtonBackground}" />
        <Setter Property="Foreground" Value="{DynamicResource AccentButtonForeground}" />
        <Setter Property="HoverBackground" Value="{DynamicResource AccentButtonBackgroundPointerOver}" />
        <Setter Property="HoverForeground" Value="{DynamicResource AccentButtonForegroundPointerOver}" />
        <Setter Property="PressedBackground" Value="{DynamicResource AccentButtonBackgroundPressed}" />
        <Setter Property="PressedForeground" Value="{DynamicResource AccentButtonForegroundPressed}" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Width" Value="48" />
        <Setter Property="Content" Value="M 20 10 L 3.828125 10 L 10.410156 16.582031 L 9 18 L 0 9 L 9 0 L 10.410156 1.416016 L 3.828125 8 L 20 8 Z" />
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <local:FontIconFallback Data="{Binding}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <WindowChrome
        x:Key="DefaultWindowChrome"
        x:Shared="False"
        CaptionHeight="{DynamicResource {x:Static primitives:TitleBar.HeightKey}}"
        CornerRadius="0"
        NonClientFrameEdges="None"
        ResizeBorderThickness="4"
        UseAeroCaptionButtons="False" />

    <WindowChrome
        x:Key="AeroWindowChrome"
        x:Shared="False"
        CaptionHeight="{DynamicResource {x:Static primitives:TitleBar.HeightKey}}"
        GlassFrameThickness="-1"
        NonClientFrameEdges="None"
        CornerRadius="0"
        ResizeBorderThickness="4"
        UseAeroCaptionButtons="False" />

    <WindowChrome
        x:Key="AcrylicWindowChrome"
        x:Shared="False"
        CaptionHeight="{DynamicResource {x:Static primitives:TitleBar.HeightKey}}"
        CornerRadius="0"
        GlassFrameThickness="0,1,0,0"
        NonClientFrameEdges="None"
        ResizeBorderThickness="4"
        UseAeroCaptionButtons="False" />

    <Style x:Key="BaseWindowStyle" TargetType="Window">
        <Setter Property="Foreground" Value="{DynamicResource SystemControlPageTextBaseHighBrush}" />
        <Setter Property="Background" Value="{DynamicResource ApplicationPageBackgroundThemeBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource WindowBorder}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FontFamily" Value="{DynamicResource ContentControlThemeFontFamily}" />
        <Setter Property="FontSize" Value="{DynamicResource ControlContentThemeFontSize}" />
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="root:ThemeManager.IsThemeAware" Value="True" />
        <Setter Property="chelper:WindowHelper.Acrylic10Color" Value="{DynamicResource {x:Static root:ThemeKeys.LayerOnAcrylicFillColorDefaultKey}}"/>
        <Setter Property="primitives:TitleBar.Background" Value="{DynamicResource ControlFillColorTransparentBrush}" />
        <Setter Property="primitives:TitleBar.Foreground" Value="{DynamicResource SystemControlForegroundBaseHighBrush}" />
        <Setter Property="primitives:TitleBar.InactiveBackground" Value="{DynamicResource ControlFillColorTransparentBrush}" />
        <Setter Property="primitives:TitleBar.InactiveForeground" Value="{DynamicResource SystemControlDisabledBaseMediumLowBrush}" />
        <Setter Property="primitives:TitleBar.BackButtonStyle" Value="{StaticResource TitleBarBackButtonStyle}" />
        <Setter Property="chelper:WindowHelper.FixMaximizedWindow" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Window">
                    <Border
                        x:Name="LayoutRoot"
                        Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        CornerRadius="{TemplateBinding chelper:ControlHelper.CornerRadius}"
                        SnapsToDevicePixels="True">
                        <Grid>
                            <Grid x:Name="Background" Visibility="Collapsed">
                                <!--  Color tint overlay  -->
                                <Rectangle
                                    x:Name="TintColorLayer"
                                    Fill="{TemplateBinding Background}"
                                    Opacity="0.8" />
                                <!--  Tiled noise texture  -->
                                <Rectangle x:Name="NoiseLayer" Opacity="0.02">
                                    <!--<Rectangle.Fill>
                                        <ImageBrush x:Name="ImageBrush_NoiseLayerBrush"
                                            ImageSource="/iNKORE.UI.WPF.Modern;component/Materials/Acrylic/NoiseAsset_256X256_PNG.png"
                                            Stretch="None"
                                            TileMode="Tile"
                                            Viewport="0,0,128,128"
                                            ViewportUnits="Absolute" />
                                    </Rectangle.Fill>-->
                                </Rectangle>
                            </Grid>

                            <Border x:Name="WindowBorder"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="{TemplateBinding chelper:ControlHelper.CornerRadius}">
                                <Grid x:Name="ContentGrid">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition />
                                    </Grid.RowDefinitions>

                                    <primitives:TitleBarControl
                                        Title="{TemplateBinding Title}"
                                        Panel.ZIndex="1"
                                        Height="{TemplateBinding primitives:TitleBar.Height}"
                                        BackButtonCommand="{TemplateBinding primitives:TitleBar.BackButtonCommand}"
                                        BackButtonCommandParameter="{TemplateBinding primitives:TitleBar.BackButtonCommandParameter}"
                                        BackButtonCommandTarget="{TemplateBinding primitives:TitleBar.BackButtonCommandTarget}"
                                        BackButtonStyle="{TemplateBinding primitives:TitleBar.BackButtonStyle}"
                                        Background="{TemplateBinding primitives:TitleBar.Background}"
                                        ButtonStyle="{TemplateBinding primitives:TitleBar.ButtonStyle}"
                                        ExtendViewIntoTitleBar="{TemplateBinding primitives:TitleBar.ExtendViewIntoTitleBar}"
                                        Foreground="{TemplateBinding primitives:TitleBar.Foreground}"
                                        Icon="{TemplateBinding Icon}"
                                        InactiveBackground="{TemplateBinding primitives:TitleBar.InactiveBackground}"
                                        InactiveForeground="{TemplateBinding primitives:TitleBar.InactiveForeground}"
                                        IsActive="{TemplateBinding IsActive}"
                                        IsBackButtonVisible="{TemplateBinding primitives:TitleBar.IsBackButtonVisible}"
                                        IsBackEnabled="{TemplateBinding primitives:TitleBar.IsBackEnabled}"
                                        IsIconVisible="{TemplateBinding primitives:TitleBar.IsIconVisible}"
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                        MaximizeButtonAvailability="{TemplateBinding primitives:TitleBar.MaximizeButtonAvailability}"
                                        MinimizeButtonAvailability="{TemplateBinding primitives:TitleBar.MinimizeButtonAvailability}"
                                        CloseButtonAvailability="{TemplateBinding primitives:TitleBar.CloseButtonAvailability}"
                                        ButtonGlyphStyle="{TemplateBinding primitives:TitleBar.ButtonGlyphStyle}"
                                        ResizeBorderThickness="{TemplateBinding primitives:TitleBar.ResizeBorderThickness}"
                                        Style="{TemplateBinding primitives:TitleBar.Style}" />

                                    <AdornerDecorator x:Name="AdornerDecorator" Grid.Row="1" CacheMode="{Binding RelativeSource={RelativeSource Self}, Path=(common:ShadowAssist.CacheMode)}">
                                        <local:ContentPresenterEx Foreground="{TemplateBinding Foreground}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                    </AdornerDecorator>

                                    <ResizeGrip
                                        x:Name="WindowResizeGrip"
                                        Grid.Row="1"
                                        HorizontalAlignment="Right"
                                        VerticalAlignment="Bottom"
                                        IsTabStop="false"
                                        Visibility="Collapsed"
                                        WindowChrome.ResizeGripDirection="BottomRight" />
                                </Grid>

                            </Border>

                            <Border
                                x:Name="HighContrastBorder"
                                BorderBrush="{DynamicResource {x:Static SystemColors.ActiveCaptionBrushKey}}"
                                BorderThickness="7,1,7,7"
                                IsHitTestVisible="False"
                                Visibility="Collapsed" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Background" Value="Transparent">
                            <!--<Setter TargetName="LayoutRoot" Property="BorderThickness" Value="0" />-->
                        </Trigger>
                        <Trigger Property="IsActive" Value="False">
                            <Setter TargetName="WindowBorder" Property="BorderBrush" Value="{DynamicResource WindowBorderInactive}" />
                            <Setter TargetName="HighContrastBorder" Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.InactiveCaptionBrushKey}}" />
                        </Trigger>
                        <DataTrigger Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="true">
                            <Setter TargetName="ContentGrid" Property="Margin" Value="7,0,7,7" />
                            <Setter TargetName="HighContrastBorder" Property="Visibility" Value="Visible" />
                        </DataTrigger>
                        <Trigger Property="WindowState" Value="Maximized">
                            <Setter TargetName="WindowBorder" Property="BorderThickness" Value="0" />
                            <Setter TargetName="ContentGrid" Property="Margin" Value="0" />
                            <Setter TargetName="HighContrastBorder" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="primitives:TitleBar.ExtendViewIntoTitleBar" Value="True">
                            <Setter TargetName="AdornerDecorator" Property="Grid.Row" Value="0" />
                            <Setter TargetName="AdornerDecorator" Property="Grid.RowSpan" Value="2" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ResizeMode" Value="CanResizeWithGrip" />
                                <Condition Property="WindowState" Value="Normal" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="WindowResizeGrip" Property="Visibility" Value="Visible" />
                        </MultiTrigger>

                        <Trigger Property="chelper:WindowHelper.ApplyBackground" Value="False">
                            <Setter TargetName="LayoutRoot" Property="Background" Value="{x:Null}"/>
                        </Trigger>
                        <Trigger Property="chelper:WindowHelper.ApplyNoise" Value="True">
                            <Setter TargetName="Background" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="NoiseLayer" Property="Fill">
                                <Setter.Value>
                                    <ImageBrush x:Name="ImageBrush_NoiseLayerBrush"
                                        ImageSource="/iNKORE.UI.WPF.Modern;component/Resources/Images/NoiseAsset_256X256_PNG.png"
                                        Stretch="None"
                                        TileMode="Tile"
                                        Viewport="0,0,128,128"
                                        ViewportUnits="Absolute" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="WindowChrome.WindowChrome" Value="{x:Null}">
                <Setter Property="chelper:WindowHelper.FixMaximizedWindow" Value="False" />
            </Trigger>
            <Trigger Property="chelper:WindowHelper.ShouldDisplayManualBorder" Value="True">
                <Setter Property="BorderThickness" Value="1" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--<Style
        x:Key="DefaultWindowStyle"
        BasedOn="{StaticResource BaseWindowStyle}"
        TargetType="Window">
        <Setter Property="OverridesDefaultStyle" Value="True" />
    </Style>

    <Style
        x:Key="AeroWindowStyle"
        BasedOn="{StaticResource BaseWindowStyle}"
        TargetType="Window">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="chelper:WindowHelper.ApplyBackground" Value="False"/>
        <Setter Property="chelper:WindowHelper.ApplyNoise" Value="True"/>
        <Setter Property="WindowChrome.WindowChrome" Value="{DynamicResource AeroWindowChrome}" />
    </Style>

    <Style
        x:Key="AcrylicWindowStyle"
        BasedOn="{StaticResource BaseWindowStyle}"
        TargetType="Window">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="chelper:WindowHelper.ApplyBackground" Value="False"/>
        <Setter Property="WindowChrome.WindowChrome" Value="{Dynami cResource AcrylicWindowChrome}" />
    </Style>-->

    <converters:BackdropUtilityConverter x:Key="BackdropIsSupportedConverter"/>
    <converters:BackdropUtilityConverter x:Key="BackdropIsManualBackgroundNeededConverter" ConverterType="ManualBackgroundNeeded"/>

    <Style
        x:Key="TheWindowStyle"
        BasedOn="{StaticResource BaseWindowStyle}"
        TargetType="Window">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="WindowChrome.WindowChrome" Value="{DynamicResource AeroWindowChrome}" />
        <Style.Triggers>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(chelper:WindowHelper.SystemBackdropType), Converter={StaticResource BackdropIsSupportedConverter}, RelativeSource={RelativeSource Mode=Self}}" Value="True"/>
                    <Condition Binding="{Binding Path=(chelper:WindowHelper.SystemBackdropType), Converter={StaticResource BackdropIsManualBackgroundNeededConverter}, RelativeSource={RelativeSource Mode=Self}}" Value="False"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="chelper:WindowHelper.ApplyBackground" Value="False"/>
            </MultiDataTrigger>
            
            <!--<Trigger Property="chelper:WindowHelper.SystemBackdropType" Value="Acrylic">
                <Setter Property="chelper:WindowHelper.ApplyNoise" Value="True"/>
            </Trigger>
            <Trigger Property="chelper:WindowHelper.SystemBackdropType" Value="Acrylic10">
                <Setter Property="chelper:WindowHelper.ApplyNoise" Value="True"/>
            </Trigger>
            <Trigger Property="chelper:WindowHelper.SystemBackdropType" Value="Acrylic11">
                <Setter Property="chelper:WindowHelper.ApplyNoise" Value="True"/>
            </Trigger>-->

        </Style.Triggers>
    </Style>

    <!--<Style
        x:Key="SnapWindowStyle"
        BasedOn="{StaticResource BaseWindowStyle}"
        TargetType="Window">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="WindowChrome.WindowChrome" Value="{DynamicResource AeroWindowChrome}" />
    </Style>-->

    <Style BasedOn="{StaticResource TheWindowStyle}" TargetType="Window">
        <Setter Property="OverridesDefaultStyle" Value="True" />
    </Style>

</ResourceDictionary>